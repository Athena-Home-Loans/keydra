<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Examples on Keydra Documentation</title><link>https://athena-home-loans.github.io/keydra/examples/</link><description>Recent content in Examples on Keydra Documentation</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 16 Nov 2022 12:03:08 +1100</lastBuildDate><atom:link href="https://athena-home-loans.github.io/keydra/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Batching Keydra Runs to avoid lambda timeout</title><link>https://athena-home-loans.github.io/keydra/examples/batchingruns/</link><pubDate>Wed, 16 Nov 2022 12:03:08 +1100</pubDate><guid>https://athena-home-loans.github.io/keydra/examples/batchingruns/</guid><description>Example to set up an AWS Event Rule in a serverless yaml file for a daily rotation splitting the runs into batches. This option was made available due to the 15-minute timeout cap on AWS Lambda. So if there were too many secrets such that the Keydra lambda function would time out during the rotation run, the batching option would be available to split the run into batches.
The example below splits the scheduled run into 2 batches and each schedule will run one half of the batch depending on which batch_number was given in the input.</description></item><item><title>Salesforce Marketing Cloud Service Account</title><link>https://athena-home-loans.github.io/keydra/examples/salesforcemarketingcloud/</link><pubDate>Tue, 20 Sep 2022 19:00:00 +1100</pubDate><guid>https://athena-home-loans.github.io/keydra/examples/salesforcemarketingcloud/</guid><description>Example to rotate the secrets for a Salesforce Marketing Cloud user daily, distributing the new password to Secrets Manager.
salesforce_marketing_cloud_user: key: sfuser-dev description: Secret for break glass access to Salesforce Prod custodians: sf_team provider: salesforce_marketing_cloud rotate: nightly distribute: - key: keydra/salesforce/sfmc-user provider: secretsmanager source: secret envs: - dev</description></item><item><title>Github Actions AWS Deployment Credentials</title><link>https://athena-home-loans.github.io/keydra/examples/githubactionsawsdeployment/</link><pubDate>Sat, 14 May 2022 14:03:08 +1100</pubDate><guid>https://athena-home-loans.github.io/keydra/examples/githubactionsawsdeployment/</guid><description>Example to rotate an AWS IAM user password; then, using an access token from the AWS Secrets Manager secret located at keydra/github, encrypt the IAM user Id/password values and save them to secrets within the my_repo repo of the me Github account.
sample: key: keydra_managed_sample description: A secret which exists in IAM custodians: my_team provider: IAM rotate: nightly distribute: - config: repository: my_repo account_username: me scope: repository envs: - dev key: AWS_ACCESS_KEY_ID provider: github source: key - config: repository: my_repo account_username: me scope: repository envs: - dev key: AWS_SECRET_ACCESS_KEY provider: github source: secret</description></item><item><title>Gitlab AWS Deployment Credentials</title><link>https://athena-home-loans.github.io/keydra/examples/gitlabawsdeployment/</link><pubDate>Sat, 14 May 2022 14:03:08 +1100</pubDate><guid>https://athena-home-loans.github.io/keydra/examples/gitlabawsdeployment/</guid><description>Example to rotate an AWS IAM user&amp;rsquo;s AWS_SECRET_ACCESS_KEY; then, using an access token from the AWS Secrets Manager secret located at keydra/gitlab, store the IAM user&amp;rsquo;s AK/SAK values as CI/CD variables within the group/infra/releases repo.
sample: key: keydra_managed_sample description: A secret which exists in IAM custodians: my_team provider: IAM rotate: nightly distribute: - config: repository: group/infra/releases scope: repository envs: - &amp;#39;*&amp;#39; key: AWS_ACCESS_KEY_ID provider: gitlab source: key - config: repository: group/infra/releases scope: repository envs: - &amp;#39;*&amp;#39; key: AWS_SECRET_ACCESS_KEY provider: gitlab source: secret</description></item><item><title>IAM User to ingest AWS Logs into Splunk</title><link>https://athena-home-loans.github.io/keydra/examples/iamsplunk/</link><pubDate>Sat, 14 May 2022 14:03:08 +1100</pubDate><guid>https://athena-home-loans.github.io/keydra/examples/iamsplunk/</guid><description>Example to rotate the secrets for an IAM user in AWS daily, creating if the user does not exist. Distribute to the AWS Add On of a Splunk instance, using Splunk credentials from Secrets Manager in keydra/splunk/awssplunk.
aws_splunk_integration: key: keydra_awssplunk description: Rotate the AWS Splunk integration account in Splunk custodians: my_team provider: IAM rotate: nightly distribute: - key: aws_prod provider: splunk provider_secret_key: awssplunk source: key_id: key secret_key: secret config: app: Splunk_TA_aws appconfig: category: 1 output_mode: json host: splunk.</description></item><item><title>Salesforce Service Account</title><link>https://athena-home-loans.github.io/keydra/examples/salesforce/</link><pubDate>Sat, 14 May 2022 14:03:08 +1100</pubDate><guid>https://athena-home-loans.github.io/keydra/examples/salesforce/</guid><description>Example to rotate the secrets for a Salesforce user daily, distributing the new password to Secrets Manager.
salesforce_user: key: sfuser-dev description: Secret for break glass access to Salesforce Prod custodians: sf_team provider: salesforce rotate: nightly distribute: - key: keydra/salesforce/sf-user provider: secretsmanager source: secret envs: - dev</description></item></channel></rss>